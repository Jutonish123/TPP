version: '3.4'

services:
  tpp.api:
    container_name: local.tpp.api
    image: ${DOCKER_REGISTRY-}tppapi
    restart: always
    build:
      context: .
      dockerfile: TPP.Api/Dockerfile
    environment:
      - ASPNETCORE_HTTP_PORTS=80
      - MessageBusHost=prod.queue
      - ConnectionStrings:Postgres=Host=local.postgres;Port=5432;Database=TPP.db;UserName=postgres;Password=thebestpassword123
      - AutoMigrate=true
    ports:
      - "51840:80"
      - "51846:443"

  tpp.bot.host:
    container_name: local.tpp.bot.host
    image: ${DOCKER_REGISTRY-}tppbothost
    restart: always
    build:
      context: .
      dockerfile: TPP.Bot.Host/Dockerfile
    environment:
      - MessageBusHost=prod.queue
 
  postgres:
    container_name: local.postgres
    image: postgres
    environment:
        POSTGRES_DB: TPP.db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: thebestpassword123
    ports:
        - "5451:5432"
    volumes:
        - postgres-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: local.queue
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  ngrok:
    container_name: local.ngrok
    image: wernight/ngrok
    volumes:
      - ./ngrok.yml:/home/ngrok/.ngrok2/ngrok.yml
    ports:
      - "4041:4041"
    command: ["ngrok", "http", "tpp.api:80"]


volumes:
  postgres-data: